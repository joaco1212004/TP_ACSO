==55659== Helgrind, a thread error detector
==55659== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==55659== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==55659== Command: ./threadpool --all
==55659== 
[36m[B01][0m Basic execution (3 tasks on 2 threads)... ==55660== 
==55660== Use --history-level=approx or =none to gain increased speed, at
==55660== the cost of reduced accuracy of conflicting-access information
==55660== For lists of detected and suppressed errors, rerun with: -s
==55660== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 208 from 21)
[1;32m‚úÖ PASSED[0m
[36m[B02][0m Wait without scheduling... ==55664== 
==55664== Use --history-level=approx or =none to gain increased speed, at
==55664== the cost of reduced accuracy of conflicting-access information
==55664== For lists of detected and suppressed errors, rerun with: -s
==55664== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 106 from 15)
[1;32m‚úÖ PASSED[0m
[36m[B03][0m Serial execution with 1 thread... ==55681== 
==55681== Use --history-level=approx or =none to gain increased speed, at
==55681== the cost of reduced accuracy of conflicting-access information
==55681== For lists of detected and suppressed errors, rerun with: -s
==55681== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 278 from 21)
[1;32m‚úÖ PASSED[0m
[36m[B04][0m FIFO execution in single-thread mode... ==55684== 
==55684== Use --history-level=approx or =none to gain increased speed, at
==55684== the cost of reduced accuracy of conflicting-access information
==55684== For lists of detected and suppressed errors, rerun with: -s
==55684== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 493 from 21)
[1;32m‚úÖ PASSED[0m
[36m[B05][0m Concurrent execution integrity (1000 tasks)... ==55687== 
==55687== Use --history-level=approx or =none to gain increased speed, at
==55687== the cost of reduced accuracy of conflicting-access information
==55687== For lists of detected and suppressed errors, rerun with: -s
==55687== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 39976 from 21)
[1;32m‚úÖ PASSED[0m
[36m[B06][0m Task execution preserves capture context... ==55701== ---Thread-Announcement------------------------------------------
==55701== 
==55701== Thread #1 is the program's root thread
==55701== 
==55701== ---Thread-Announcement------------------------------------------
==55701== 
==55701== Thread #2 was created
==55701==    at 0x4C48A23: clone (clone.S:76)
==55701==    by 0x4C48BA2: __clone_internal_fallback (clone-internal.c:64)
==55701==    by 0x4C48BA2: __clone_internal (clone-internal.c:109)
==55701==    by 0x4BBB54F: create_thread (pthread_create.c:297)
==55701==    by 0x4BBC1A4: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==55701==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==55701==    by 0x495FEB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==55701==    by 0x10EA6E: std::thread::thread<ThreadPool::ThreadPool(unsigned long)::{lambda()#1}, , void>(ThreadPool::ThreadPool(unsigned long)::{lambda()#1}&&) (std_thread.h:164)
==55701==    by 0x10DD99: ThreadPool::ThreadPool(unsigned long) (thread-pool.cc:14)
==55701==    by 0x118DB6: test_capture_correctness() (test_custom.cc:889)
==55701==    by 0x134812: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==55701==    by 0x1333D3: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==55701==    by 0x131705: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==55701== 
==55701== ----------------------------------------------------------------
==55701== 
==55701== Possible data race during read of size 4 at 0x1FFEFFDFB4 by thread #1
==55701== Locks held: none
==55701==    at 0x118EA6: test_capture_correctness() (test_custom.cc:898)
==55701==    by 0x134812: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==55701==    by 0x1333D3: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==55701==    by 0x131705: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==55701==    by 0x12F22B: std::function<bool ()>::operator()() const (std_function.h:591)
==55701==    by 0x119E19: run_test(TestCase const&) (test_custom.cc:1045)
==55701==    by 0x11B602: main (test_custom.cc:1143)
==55701== 
==55701== This conflicts with a previous write of size 4 by thread #2
==55701== Locks held: none
==55701==    at 0x118D60: test_capture_correctness()::{lambda()#1}::operator()() const (test_custom.cc:893)
==55701==    by 0x128AF3: void std::__invoke_impl<void, test_capture_correctness()::{lambda()#1}&>(std::__invoke_other, test_capture_correctness()::{lambda()#1}&) (invoke.h:61)
==55701==    by 0x125FBB: std::enable_if<std::is_void<void>::value, void>::type std::__invoke_r<void, test_capture_correctness()::{lambda()#1}&>(test_capture_correctness()::{lambda()#1}&) (invoke.h:150)
==55701==    by 0x12231D: std::_Function_handler<void (), test_capture_correctness()::{lambda()#1}>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==55701==    by 0x110659: std::function<void ()>::operator()() const (std_function.h:591)
==55701==    by 0x10E8DF: ThreadPool::worker(int) (thread-pool.cc:111)
==55701==    by 0x10DC3A: ThreadPool::ThreadPool(unsigned long)::{lambda()#1}::operator()() const (thread-pool.cc:14)
==55701==    by 0x10F199: void std::__invoke_impl<void, ThreadPool::ThreadPool(unsigned long)::{lambda()#1}>(std::__invoke_other, ThreadPool::ThreadPool(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==55701==  Address 0x1ffeffdfb4 is on thread #1's stack
==55701==  in frame #0, created by test_capture_correctness() (test_custom.cc:887)
==55701== 
==55701== 
==55701== Use --history-level=approx or =none to gain increased speed, at
==55701== the cost of reduced accuracy of conflicting-access information
==55701== For lists of detected and suppressed errors, rerun with: -s
==55701== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 173 from 21)
[1;31m‚ùå FAILED[0m
[32m[C01][0m Stress with 1000 tasks... ==55706== 
==55706== Use --history-level=approx or =none to gain increased speed, at
==55706== the cost of reduced accuracy of conflicting-access information
==55706== For lists of detected and suppressed errors, rerun with: -s
==55706== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 33432 from 21)
[1;32m‚úÖ PASSED[0m
[32m[C02][0m Reusing the pool after wait... ==55721== 
==55721== Use --history-level=approx or =none to gain increased speed, at
==55721== the cost of reduced accuracy of conflicting-access information
==55721== For lists of detected and suppressed errors, rerun with: -s
==55721== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 236 from 20)
[1;32m‚úÖ PASSED[0m
[32m[C03][0m Multiple wait() calls... ==55727== 
==55727== Use --history-level=approx or =none to gain increased speed, at
==55727== the cost of reduced accuracy of conflicting-access information
==55727== For lists of detected and suppressed errors, rerun with: -s
==55727== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 175 from 20)
[1;32m‚úÖ PASSED[0m
[32m[C04][0m Alternating heavy/light tasks stress... ==55733== 
==55733== Use --history-level=approx or =none to gain increased speed, at
==55733== the cost of reduced accuracy of conflicting-access information
==55733== For lists of detected and suppressed errors, rerun with: -s
==55733== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 41989 from 21)
[1;32m‚úÖ PASSED[0m
[32m[C05][0m Excessive signal calls to dispatcher... ==55753== 
==55753== Use --history-level=approx or =none to gain increased speed, at
==55753== the cost of reduced accuracy of conflicting-access information
==55753== For lists of detected and suppressed errors, rerun with: -s
==55753== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 38249 from 21)
[1;32m‚úÖ PASSED[0m
[35m[E01][0m Massive stress (10k tasks)... ==55765== 
==55765== Use --history-level=approx or =none to gain increased speed, at
==55765== the cost of reduced accuracy of conflicting-access information
==55765== For lists of detected and suppressed errors, rerun with: -s
==55765== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 321846 from 21)
[1;32m‚úÖ PASSED[0m
[35m[E02][0m Long tasks then shutdown... ==55805== 
==55805== Use --history-level=approx or =none to gain increased speed, at
==55805== the cost of reduced accuracy of conflicting-access information
==55805== For lists of detected and suppressed errors, rerun with: -s
==55805== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 513 from 22)
[1;32m‚úÖ PASSED[0m
[35m[E03][0m Lots of short tasks on few threads... ==55811== 
==55811== Use --history-level=approx or =none to gain increased speed, at
==55811== the cost of reduced accuracy of conflicting-access information
==55811== For lists of detected and suppressed errors, rerun with: -s
==55811== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 8583 from 22)
[1;32m‚úÖ PASSED[0m
[35m[E04][0m Detect potential deadlock... ==55815== 
==55815== Use --history-level=approx or =none to gain increased speed, at
==55815== the cost of reduced accuracy of conflicting-access information
==55815== For lists of detected and suppressed errors, rerun with: -s
==55815== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 148 from 29)
[1;32m‚úÖ PASSED[0m
[35m[E05][0m Simulated pendingTasks tracking... ==55820== 
==55820== Use --history-level=approx or =none to gain increased speed, at
==55820== the cost of reduced accuracy of conflicting-access information
==55820== For lists of detected and suppressed errors, rerun with: -s
==55820== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4215 from 22)
[1;32m‚úÖ PASSED[0m
[34m[F01][0m Schedule from multiple threads... ==55826== 
==55826== Use --history-level=approx or =none to gain increased speed, at
==55826== the cost of reduced accuracy of conflicting-access information
==55826== For lists of detected and suppressed errors, rerun with: -s
==55826== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 70080 from 23)
[1;32m‚úÖ PASSED[0m
[34m[F02][0m Schedule after destruction (invalid use)... ==55849== 
==55849== Use --history-level=approx or =none to gain increased speed, at
==55849== the cost of reduced accuracy of conflicting-access information
==55849== For lists of detected and suppressed errors, rerun with: -s
==55849== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 128 from 20)
[1;32m‚úÖ PASSED[0m
[34m[F03][0m Schedule inside another task... ==55853== 
==55853== Use --history-level=approx or =none to gain increased speed, at
==55853== the cost of reduced accuracy of conflicting-access information
==55853== For lists of detected and suppressed errors, rerun with: -s
==55853== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 235 from 17)
[1;32m‚úÖ PASSED[0m
[34m[F04][0m Wait blocks until all tasks finish... ==55859== 
==55859== Use --history-level=approx or =none to gain increased speed, at
==55859== the cost of reduced accuracy of conflicting-access information
==55859== For lists of detected and suppressed errors, rerun with: -s
==55859== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 128 from 20)
[1;32m‚úÖ PASSED[0m
[34m[F06][0m Many waits in parallel... ==55863== 
==55863== Use --history-level=approx or =none to gain increased speed, at
==55863== the cost of reduced accuracy of conflicting-access information
==55863== For lists of detected and suppressed errors, rerun with: -s
==55863== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2293 from 23)
[1;32m‚úÖ PASSED[0m
[34m[F07][0m High contention on atomic counter... ==55874== 
==55874== Use --history-level=approx or =none to gain increased speed, at
==55874== the cost of reduced accuracy of conflicting-access information
==55874== For lists of detected and suppressed errors, rerun with: -s
==55874== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 34615 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F08][0m Destroy pool immediately after scheduling... ==55881== 
==55881== Use --history-level=approx or =none to gain increased speed, at
==55881== the cost of reduced accuracy of conflicting-access information
==55881== For lists of detected and suppressed errors, rerun with: -s
==55881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 485 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F09][0m Interleaved schedule/wait execution... ==55885== 
==55885== Use --history-level=approx or =none to gain increased speed, at
==55885== the cost of reduced accuracy of conflicting-access information
==55885== For lists of detected and suppressed errors, rerun with: -s
==55885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2615 from 26)
[1;32m‚úÖ PASSED[0m
[34m[F10][0m Multiple schedule/wait rounds... ==55895== 
==55895== Use --history-level=approx or =none to gain increased speed, at
==55895== the cost of reduced accuracy of conflicting-access information
==55895== For lists of detected and suppressed errors, rerun with: -s
==55895== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F11][0m Multiple wait() calls inside tasks... ==55897== 
==55897== Use --history-level=approx or =none to gain increased speed, at
==55897== the cost of reduced accuracy of conflicting-access information
==55897== For lists of detected and suppressed errors, rerun with: -s
==55897== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F12][0m Concurrent schedule/wait in parallel... ==55898== 
==55898== Use --history-level=approx or =none to gain increased speed, at
==55898== the cost of reduced accuracy of conflicting-access information
==55898== For lists of detected and suppressed errors, rerun with: -s
==55898== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 7621 from 24)
[1;32m‚úÖ PASSED[0m
[34m[F13][0m Worker state corruption attempt... ==55910== 
==55910== Use --history-level=approx or =none to gain increased speed, at
==55910== the cost of reduced accuracy of conflicting-access information
==55910== For lists of detected and suppressed errors, rerun with: -s
==55910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4358 from 21)
[1;32m‚úÖ PASSED[0m
[31m[H01][0m Wait inside task should deadlock... ==55914== 
==55914== Use --history-level=approx or =none to gain increased speed, at
==55914== the cost of reduced accuracy of conflicting-access information
==55914== For lists of detected and suppressed errors, rerun with: -s
==55914== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[33m[L01][0m Destructor waits for tasks completion... ==55915== 
==55915== Use --history-level=approx or =none to gain increased speed, at
==55915== the cost of reduced accuracy of conflicting-access information
==55915== For lists of detected and suppressed errors, rerun with: -s
==55915== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 115 from 21)
[1;32m‚úÖ PASSED[0m
[33m[L02][0m Repeated pool creation and destruction... ==55918== 
==55918== Use --history-level=approx or =none to gain increased speed, at
==55918== the cost of reduced accuracy of conflicting-access information
==55918== For lists of detected and suppressed errors, rerun with: -s
==55918== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 47232 from 22)
[1;32m‚úÖ PASSED[0m
[33m[L03][0m Destructor during high load... ==56220== 
==56220== Use --history-level=approx or =none to gain increased speed, at
==56220== the cost of reduced accuracy of conflicting-access information
==56220== For lists of detected and suppressed errors, rerun with: -s
==56220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 37673 from 21)
[1;32m‚úÖ PASSED[0m
[91m[M01][0m Schedule nullptr function... ==56232== 
==56232== Use --history-level=approx or =none to gain increased speed, at
==56232== the cost of reduced accuracy of conflicting-access information
==56232== For lists of detected and suppressed errors, rerun with: -s
==56232== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 62 from 15)
[1;32m‚úÖ PASSED[0m
[91m[M02][0m wait() during infinite rescheduling... ==56237== 
==56237== Use --history-level=approx or =none to gain increased speed, at
==56237== the cost of reduced accuracy of conflicting-access information
==56237== For lists of detected and suppressed errors, rerun with: -s
==56237== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[91m[M03][0m Use-after-destruction protection... ==56238== 
==56238== Use --history-level=approx or =none to gain increased speed, at
==56238== the cost of reduced accuracy of conflicting-access information
==56238== For lists of detected and suppressed errors, rerun with: -s
==56238== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 128 from 20)
[1;32m‚úÖ PASSED[0m
[96m[N01][0m Deep nested task scheduling... ==56242== 
==56242== Use --history-level=approx or =none to gain increased speed, at
==56242== the cost of reduced accuracy of conflicting-access information
==56242== For lists of detected and suppressed errors, rerun with: -s
==56242== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 280 from 27)
[1;32m‚úÖ PASSED[0m
[96m[N02][0m Extreme nested scheduling (1000)... ==56249== 
==56249== Use --history-level=approx or =none to gain increased speed, at
==56249== the cost of reduced accuracy of conflicting-access information
==56249== For lists of detected and suppressed errors, rerun with: -s
==56249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 50130 from 27)
[1;32m‚úÖ PASSED[0m
[95m[T01][0m Parallel speedup benchmark (4 tasks)... ==56256== 
==56256== Use --history-level=approx or =none to gain increased speed, at
==56256== the cost of reduced accuracy of conflicting-access information
==56256== For lists of detected and suppressed errors, rerun with: -s
==56256== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 267 from 20)
[1;32m‚úÖ PASSED[0m
[95m[T02][0m Scalability bottleneck test... ==56262== 
==56262== Use --history-level=approx or =none to gain increased speed, at
==56262== the cost of reduced accuracy of conflicting-access information
==56262== For lists of detected and suppressed errors, rerun with: -s
==56262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 39820 from 21)
[1;32m‚úÖ PASSED[0m

========================================
Ran 39 tests.
‚ùå SOME TESTS FAILED
========================================
==55659== 
==55659== Use --history-level=approx or =none to gain increased speed, at
==55659== the cost of reduced accuracy of conflicting-access information
==55659== For lists of detected and suppressed errors, rerun with: -s
==55659== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
